#!/usr/bin/env bash

# SOURCE: https://www.junian.net/tech/ffmpeg-vertical-video-blur/
set -e

# NOTE: Scaling up an image to have padded space between top and bottom is call letterboxing.
# NOTE: Scaling up an image to have padded space between left and right is call pillarboxing.

# https://gist.github.com/jonsuh/3c89c004888dfc7352be
# ----------------------------------
# Colors
# ----------------------------------
export NOCOLOR='\033[0m'
export RED='\033[0;31m'
export GREEN='\033[0;32m'
export ORANGE='\033[0;33m'
export BLUE='\033[0;34m'
export PURPLE='\033[0;35m'
export CYAN='\033[0;36m'
export LIGHTGRAY='\033[0;37m'
export DARKGRAY='\033[1;30m'
export LIGHTRED='\033[1;31m'
export LIGHTGREEN='\033[1;32m'
export YELLOW='\033[1;33m'
export LIGHTBLUE='\033[1;34m'
export LIGHTPURPLE='\033[1;35m'
export LIGHTCYAN='\033[1;36m'
export WHITE='\033[1;37m'


while getopts ":hf:" opt; do
  case ${opt} in
    h ) # process option h
      ;;
    f ) # process option f
      filename_val=$OPTARG
      ;;
    \? )
      echo "Invalid option: $OPTARG" 1>&2
      ;;
    : )
      echo "Invalid option: $OPTARG requires an argument" 1>&2
      ;;
  esac
done

export input_file="${filename_val}"
export full_path_input_file="$(pwd)/${filename_val}"
export full_path_output_file="blur-$(uuidgen).mp4"

############################
export input_file="${filename_val}"
export full_path_input_file="$(pwd)/${filename_val}"
export get_extension=$(basename -- $input_file | cut -d"." -f2)
export full_path_output_file="blur-$(uuidgen).${get_extension}"
# generate a common name when one isn't passed in from outside the script
if [[ x"$common_name" = x"" ]]; then
    export fname_common="$(uuidgen).${get_extension}"
    # export full_path_input_file="${fname_common}"
    export full_path_output_file="loop-${fname_common}"
    # export full_path_input_file="$(pwd)/${fname_common}"
fi


echo -e " ${BLUE}[ffmpeg-blur]${NOCOLOR} tmpfile=${tmpfile}"
echo -e " ${BLUE}[ffmpeg-blur]${NOCOLOR} will set the width of the output image to 1920 pixels and will calculate the height of the output image according to the aspect ratio of the input video."


ffmpeg -i ${input_file} \
-vf 'split[original][copy];[copy]scale=ih*16/9:-1,crop=h=iw*9/16,gblur=sigma=20[blurred];[blurred][original]overlay=(main_w-overlay_w)/2:(main_h-overlay_h)/2' \
${full_path_output_file}
