#!/usr/bin/env bash

# SOURCE: https://superuser.com/questions/1529102/ffmpeg-video-scale-and-padding-to-make-it-work-for-twitter
# set -euox pipefail
set -e

# https://gist.github.com/jonsuh/3c89c004888dfc7352be
# ----------------------------------
# Colors
# ----------------------------------
export NOCOLOR='\033[0m'
export RED='\033[0;31m'
export GREEN='\033[0;32m'
export ORANGE='\033[0;33m'
export BLUE='\033[0;34m'
export PURPLE='\033[0;35m'
export CYAN='\033[0;36m'
export LIGHTGRAY='\033[0;37m'
export DARKGRAY='\033[1;30m'
export LIGHTRED='\033[1;31m'
export LIGHTGREEN='\033[1;32m'
export YELLOW='\033[1;33m'
export LIGHTBLUE='\033[1;34m'
export LIGHTPURPLE='\033[1;35m'
export LIGHTCYAN='\033[1;36m'
export WHITE='\033[1;37m'

export awk_bin="$(which gawk)"
export sed_bin="$(which gsed)"

while getopts ":hf:" opt; do
  case ${opt} in
    h ) # process option h
      ;;
    f ) # process option f
      filename_val=$OPTARG
      ;;
    \? )
      echo "Invalid option: $OPTARG" 1>&2
      ;;
    : )
      echo "Invalid option: $OPTARG requires an argument" 1>&2
      ;;
  esac
done

export input_file="${filename_val}"
export full_path_input_file="$(pwd)/${filename_val}"
export full_path_output_file="tiktok-$(uuidgen).mp4"
export font_location='/Volumes/Macintosh HD/System/Library/Fonts/Helvetica.ttc'

tmpfile=$(mktemp /tmp/abc-script.XXXXXX)
echo -e " ${BLUE}[ffmpeg-twitter]${NOCOLOR} tmpfile=${tmpfile}"
echo -e " ${BLUE}[ffmpeg-twitter]${NOCOLOR} will set the width of the output image to 1920 pixels and will calculate the height of the output image according to the aspect ratio of the input video."

# File Type: MP4 or MOV
# Max Time: 2 minutes and 20 seconds
# Minimum Resolution: 32 x 32
# Maximum Resolution: 1920 x 1200
# Aspect Ratios: 1:2.39 - 2.39:1 range (inclusive)
# Maximum Frame rate: 40 fps
# Maximum Video Bitrate: 25 Mbps

# The original resolution was 3600x1200, but after running

# ffmpeg -i output.mp4 -filter:v "scale='min(1280,iw)':min'(720,ih)':force_original_aspect_ratio=decrease,pad=1280:720:(ow-iw)/2:(oh-ih)/2" output_twitter.mp4

# It still doesn't change the aspect ratio (visually) when I open it with a GUI player (the resolution seems lower though). However, from the command line, mediainfo seems to suggest that the output resolution is now 1280x720:

cat << EOF > "${tmpfile}"
ffmpeg -hide_banner -loglevel warning -i ${full_path_input_file} -filter:v "scale='min(1280,iw)':min'(720,ih)':force_original_aspect_ratio=decrease,pad=1280:720:(ow-iw)/2:(oh-ih)/2" -pix_fmt yuv420p ${full_path_output_file}
EOF

echo -e " ${BLUE}[ffmpeg-twitter]${NOCOLOR} cat ${tmpfile}"
cat "${tmpfile}"

bash  "${tmpfile}"

rm "$tmpfile"
