#!/usr/bin/env bash

# set -x

# https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
# set -euox pipefail
set -e

# https://gist.github.com/jonsuh/3c89c004888dfc7352be
# ----------------------------------
# Colors
# ----------------------------------
export NOCOLOR='\033[0m'
export RED='\033[0;31m'
export GREEN='\033[0;32m'
export ORANGE='\033[0;33m'
export BLUE='\033[0;34m'
export MAD_BLUE='\e[34m'
export PURPLE='\033[0;35m'
export CYAN='\033[0;36m'
export LIGHTGRAY='\033[0;37m'
export DARKGRAY='\033[1;30m'
export LIGHTRED='\033[1;31m'
export LIGHTGREEN='\033[1;32m'
export YELLOW='\033[1;33m'
export LIGHTBLUE='\033[1;34m'
export LIGHTPURPLE='\033[1;35m'
export LIGHTCYAN='\033[1;36m'
export WHITE='\033[1;37m'

delete_orig=false
verbose=false

while getopts ":hf:dt:v" opt; do
  case ${opt} in
    h ) # process option h
      ;;
    f ) # process option f
      filename_val=$OPTARG
      ;;
    t ) # process option t
      text_val=$OPTARG
      ;;
    d ) # process option f
      delete_orig=true
      ;;
    v ) # process option f
      verbose=true
      PS4='(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]} - [${SHLVL},${BASH_SUBSHELL}, $?]'
      ;;
    \? )
      echo "Invalid option: $OPTARG" 1>&2
      ;;
    : )
      echo "Invalid option: $OPTARG requires an argument" 1>&2
      ;;
  esac
done

if [[ "$verbose" = "true" ]]; then
  echo -e " ${GREEN}[ffmpeg-batch-process]${NOCOLOR} ${YELLOW}verbose mode detected${NOCOLOR}"
  PS4='(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]} - [${SHLVL},${BASH_SUBSHELL}, $?]'
fi


# Step 1. Get duration of video to determine if we need to loop it.
echo -e " ${GREEN}[ffmpeg-batch-process]${NOCOLOR} ${YELLOW}checking if file needs to be looped first..${NOCOLOR}"

video_duration=$(ffmpeg-duration -f "${filename_val}")

loop_video_flag=false
if [ "15" -gt "$video_duration" ]; then
  loop_video_flag=true
fi

export input_file="${filename_val}"
export full_path_input_file="${filename_val}"

export get_extension=$(basename -- $input_file | cut -d"." -f2)
export fname_common="$(uuidgen).${get_extension}"

if [ "$loop_video_flag" = true ] ; then
    echo -e " ${YELLOW}[ffmpeg-batch-process]${NOCOLOR} loop_video_flag=${loop_video_flag}, looping .... ${YELLOW}cmd: ffmpeg-loop -f $input_file -c $fname_common${NOCOLOR}"
    ffmpeg-loop -f $input_file -c $fname_common
    export input_file="loop-$fname_common"
    export full_path_input_file="${input_file}"
    echo -e " ${YELLOW}[ffmpeg-batch-process] verify variable${NOCOLOR} ${GREEN}full_path_input_file=${full_path_input_file}${NOCOLOR}"
    echo -e " ${YELLOW}[ffmpeg-batch-process] running${NOCOLOR} ${GREEN}ls -lta $input_file${NOCOLOR}\n"
    ls -lta $input_file
fi

# set +e
export common_name_without_extension="$(echo $fname_common | cut -d "." -f1)"
echo -e " ${BLUE}[ffmpeg-batch-process]${NOCOLOR} common_name_without_extension=${common_name_without_extension}"
# set -e

export watermark_text=${text_val}
export font_location='/Volumes/Macintosh HD/System/Library/Fonts/Helvetica.ttc'
tmpfile=$(mktemp /tmp/abc-script.XXXXXX)
echo -e " ${BLUE}[ffmpeg-batch-process]${NOCOLOR} tmpfile=${tmpfile}"
echo -e " ${BLUE}[ffmpeg-batch-process]${NOCOLOR} will set the width of the output image to 1920 pixels and will calculate the height of the output image according to the aspect ratio of the input video."

# https://superuser.com/questions/547296/resizing-videos-with-ffmpeg-avconv-to-fit-into-static-sized-player
# https://superuser.com/questions/690021/video-padding-using-ffmpeg/690211
# https://github.com/jackliston1998/project-jimin/blob/217c593f873331c01c81daa7fc232433ea9efd13/editor.py
# https://stackoverflow.com/questions/54526345/ffmpeg-how-to-move-the-video-without-stretching-it
# https://later.com/blog/instagram-image-size/
cat << EOF > "${tmpfile}"

echo -e " ${GREEN}[ffmpeg-batch-process]${NOCOLOR} ${CYAN}running${NOCOLOR} ffmpeg-instagram-all-sizes\n"
echo -e " ${GREEN}[ffmpeg-batch-process]${NOCOLOR} ${CYAN}cmd${NOCOLOR} ffmpeg-instagram-all-sizes -f ${full_path_input_file} -c ${fname_common}\n"
ffmpeg-instagram-all-sizes -f ${full_path_input_file} -c ${fname_common}

echo -e " ${GREEN}[ffmpeg-batch-process]${NOCOLOR} ${CYAN}running${NOCOLOR} ffmpeg-tiktok\n"
echo -e " ${GREEN}[ffmpeg-batch-process]${NOCOLOR} ${CYAN}cmd${NOCOLOR} ffmpeg-tiktok -f ${full_path_input_file} -c ${fname_common}\n"
ffmpeg-tiktok -f ${full_path_input_file} -c ${fname_common}

echo -e " ${GREEN}[ffmpeg-batch-process]${NOCOLOR} ${CYAN}running${NOCOLOR} ffmpeg-watermark\n"
for filename in ./*${common_name_without_extension}*; do echo ffmpeg-watermark -f "\$filename" -c ${fname_common} -t \"$watermark_text\"; done > loop.txt
cat loop.txt
bash  loop.txt

rm loop.txt
EOF


# ffmpeg -hide_banner -loglevel warning -i ${full_path_input_file} -vf "scale=950:500:force_original_aspect_ratio=decrease,pad=1080:608:-1:-1:color=white,setdar=1.91:1" ig-landscape-608-${fname_common}

# echo -e " ${GREEN}[ffmpeg-batch-process]${NOCOLOR} ${CYAN}landscape${NOCOLOR} photos ${YELLOW}1.91:1 (1080 x 608px)${NOCOLOR}"
# ffmpeg -hide_banner -loglevel warning -i ${full_path_input_file} -vf "scale=950:500:force_original_aspect_ratio=decrease,pad=1080:608:-1:-1:color=white,setdar=1.91:1" ig-landscape-608-${fname_common}

# echo -e " ${GREEN}[ffmpeg-batch-process]${NOCOLOR} ${CYAN}square${NOCOLOR} photos ${YELLOW}1:1 (1080 x 1080px)${NOCOLOR}"
# ffmpeg -hide_banner -loglevel warning -i ${full_path_input_file} -vf "scale=1080:1080:force_original_aspect_ratio=decrease,pad=1080:1080:-1:-1:color=white,setdar=1:1" ig-square-1080x1080-${fname_common}

# echo -e " ${GREEN}[ffmpeg-batch-process]${NOCOLOR} ${CYAN}portrait${NOCOLOR} photos ${YELLOW}4:5 (1080 x 1350px)${NOCOLOR}"
# ffmpeg -hide_banner -loglevel warning -i ${full_path_input_file} -vf "scale=1080:1350:force_original_aspect_ratio=decrease,pad=1080:1350:-1:-1:color=white,setdar=1:1" ig-portrait-1080x1350-${fname_common}

# echo -e " ${GREEN}[ffmpeg-batch-process]${NOCOLOR} ${CYAN}tiktok${NOCOLOR} video ${YELLOW}1080:1920 (1080 x 1920px)${NOCOLOR}"
# ffmpeg-tiktok -f ${full_path_input_file} -c $fname_common

# ig-landscape-608-${fname_common}
# ig-square-1080x1080-${fname_common}
# ig-portrait-1080x1350-${fname_common}
# ig-stories-1080x1920-${fname_common}

echo -e " ${BLUE}[ffmpeg-batch-process]${NOCOLOR} cat ${tmpfile}\n"

cat ${tmpfile}

echo -e "\n"

bash "${tmpfile}"

rm "$tmpfile"

# 720x576
