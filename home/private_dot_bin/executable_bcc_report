#!/usr/bin/env bash
set -x

# SOURCE: https://github.com/philkuz/pixie/blob/main/experimental/bcc_perf/bcc_commands.sh

# Copyright 2018- The Pixie Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

interval_secs=2
capture_secs=10
outdir="output"
usage() {
  echo "Usage: $0 [-i interval in secs to store data] [-t time for capture in seconds] \
  [-o output directory under /usr/share/bcc/tools (will be extended with a timestamp)]"
  exit 2
}

# Input options
# interval_secs is the interval at which data should be printed to the output file
# capture_secs is the duration for which data should be collected
# outdir is the directory under /usr/share/tools/bcc where output data will be stored

while getopts 'hi:t:o:' c; do
  case $c in
  h) usage ;;
  i)
    interval_secs=$OPTARG
    echo "Script will collect data at intervals of $interval_secs secs."
    ;;
  t)
    capture_secs=$OPTARG
    echo "Script will collect data for $capture_secs secs. before exiting"
    ;;
  o)
    outdir=${OPTARG}_$(date +%Y_%m_%d_%H_%M_%S)
    echo "Results will be stored in /usr/share/bcc/tools/$outdir"
    ;;
  :) usage ;;
  esac
done

# mount -t debugfs none || exit /sys/kernel/debug
cd /usr/share/bcc/tools || exit
sudo mkdir -p bcc_data
sudo mkdir -p "$outdir"

sudo env | sudo tee ./"$outdir"/env.txt
sudo timeout -s SIGINT "$capture_secs" /bin/python3 /usr/share/bcc/tools/cachestat -T "$interval_secs" | sudo tee ./"$outdir"/cachestat.txt &
sudo timeout -s SIGINT "$capture_secs" /bin/python3 /usr/share/bcc/tools/execsnoop | sudo tee ./"$outdir"/execsnoop.txt &
sudo /bin/python3 /usr/share/bcc/tools/opensnoop -d "$capture_secs" | sudo tee ./"$outdir"/opensnoop.txt &
sudo timeout -s SIGINT "$capture_secs" /bin/python3 /usr/share/bcc/tools/ext4slower | sudo tee ./"$outdir"/ext4slower.txt &
sudo timeout -s SIGINT "$capture_secs" /bin/python3 /usr/share/bcc/tools/biolatency | sudo tee ./"$outdir"/biolatency.txt &
sudo timeout -s SIGINT "$capture_secs" /bin/python3 /usr/share/bcc/tools/biosnoop | sudo tee ./"$outdir"/biosnoop.txt &
sudo timeout -s SIGINT "$capture_secs" /bin/python3 /usr/share/bcc/tools/tcpconnect | sudo tee ./"$outdir"/tcpconnect.txt &
sudo timeout -s SIGINT "$capture_secs" /bin/python3 /usr/share/bcc/tools/tcpaccept | sudo tee ./"$outdir"/tcpaccept.txt &
sudo timeout -s SIGINT "$capture_secs" /bin/python3 /usr/share/bcc/tools/tcpretrans | sudo tee ./"$outdir"/tcpretrans.txt &
sudo timeout -s SIGINT "$capture_secs" /bin/python3 /usr/share/bcc/tools/runqlat | sudo tee ./"$outdir"/runqlat.txt &
sudo timeout -s SIGINT "$capture_secs" /bin/python3 /usr/share/bcc/tools/profile | sudo tee ./"$outdir"/profile.txt &
sudo timeout -s SIGINT "$capture_secs" /bin/python3 /usr/share/bcc/tools/funccount 'vfs_*' | sudo tee ./"$outdir"/funccount_vfs.txt &
sudo timeout -s SIGINT "$capture_secs" /bin/python3 /usr/share/bcc/tools/funccount 'c:malloc_*' | sudo tee ./"$outdir"/funccount_malloc.txt &
sudo lsof | sudo tee ./"$outdir"/lsof.txt &
sudo ps auxef | sudo tee ./"$outdir"/ps.txt &
sudo dpkg -l | sudo tee ./"$outdir"/ps.txt &

sleep $(expr "$capture_secs" + 30)
sudo mkdir -p bcc_data/"$outdir"
# # gcsfuse takes its sweet time to create a directory
sleep 10
sudo cp -rf "$outdir"/*.txt bcc_data/"$outdir"/
sudo sync -f bcc_data/"$outdir"/*.txt
sudo chown pi:pi -R bcc_data
tree bcc_data

find /usr/share/bcc/tools/bcc_data -type f -name '*.txt' -exec cat {} \;
