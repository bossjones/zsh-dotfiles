name: GitHub Actions CI
on:
  push:
    branches:
      - main
      - master
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
  #  # https://docs.github.com/en/webhooks-and-events/webhooks/webhook-events-and-payloads#workflow_dispatch
  # workflow_dispatch:
  #  # Allow this workflow to be run manually (pushing to testpypi instead of pypi)
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)
        required: false
        default: "false"
concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.event.pull_request.number|| github.sha }}
  cancel-in-progress: true
jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['macos-14', 'macos-latest']
        python-version: ['3.12']

    steps:
      - name: Set up Git repository on ${{ matrix.os }}
        uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: 'requirements-test.txt'

      - uses: actions/setup-go@v5
        with:
          go-version: '1.20.5' # The Go version to download (if necessary) and use.
      - run: go version

      - name: brew taps on ${{ matrix.os }}
        run: |
            brew tap schniz/tap || true

      - name: brew install actionlint ${{ matrix.os }}
        run: |
            brew install actionlint || true


      - name: Run zsh-dotfiles-prep on ${{ matrix.os }}
        env:
          ZSH_DOTFILES_PREP_CI: 1
          ZSH_DOTFILES_PREP_DEBUG: 1
          # NOTE: Skip Brew bundle for now, speed up tests
          ZSH_DOTFILES_PREP_GITHUB_USER: bossjones
          ZSH_DOTFILES_PREP_SKIP_BREW_BUNDLE: 1
        run: |
            brew tap schniz/tap || true
            brew install wget || true
            brew install curl || true
            brew install kadwanev/brew/retry || true
            brew install go || true

            brew install openssl@3 readline libyaml gmp autoconf tmux || true

            { echo "$HOME/bin"; echo "$HOME/.bin"; echo "$HOME/.local/bin"; } >> "${GITHUB_PATH}"
            export PATH="${HOME}/.bin:${HOME}/bin:${HOME}/.local/bin:${PATH}"

            wget https://raw.githubusercontent.com/bossjones/zsh-dotfiles-prep/main/bin/zsh-dotfiles-prereq-installer
            chmod +x zsh-dotfiles-prereq-installer
            retry -t 4  -- ./zsh-dotfiles-prereq-installer --debug


      - name: Rerun zsh-dotfiles-prep on ${{ matrix.os }}
        env:
          ZSH_DOTFILES_PREP_CI: 1
          ZSH_DOTFILES_PREP_DEBUG: 1
          # NOTE: Skip Brew bundle for now, speed up tests
          ZSH_DOTFILES_PREP_GITHUB_USER: bossjones
          ZSH_DOTFILES_PREP_SKIP_BREW_BUNDLE: 1
        run: |
            brew tap schniz/tap || true
            brew install wget || true
            brew install curl || true
            brew install go || true
            brew install trash || true

            { echo "$HOME/bin"; echo "$HOME/.bin"; echo "$HOME/.local/bin"; } >> "${GITHUB_PATH}"
            export PATH="${HOME}/.bin:${HOME}/bin:${HOME}/.local/bin:${PATH}"

            wget https://raw.githubusercontent.com/bossjones/zsh-dotfiles-prep/main/bin/zsh-dotfiles-prereq-installer
            chmod +x zsh-dotfiles-prereq-installer
            retry -t 4  -- ./zsh-dotfiles-prereq-installer --debug


      - name: full chezmoi install on ${{ matrix.os }}
        env:
          ZSH_DOTFILES_PREP_CI: 1
          ZSH_DOTFILES_PREP_DEBUG: 1
          # NOTE: Skip Brew bundle for now, speed up tests
          ZSH_DOTFILES_PREP_GITHUB_USER: bossjones
          ZSH_DOTFILES_PREP_SKIP_BREW_BUNDLE: 1
        run: |
          { echo "$HOME/bin"; echo "$HOME/.bin"; echo "$HOME/.local/bin"; } >> "${GITHUB_PATH}"
          export PATH="${HOME}/.bin:${HOME}/bin:${HOME}/.local/bin:${PATH}"


          retry -t 4  -- "$HOME/.bin/chezmoi" init -R --debug -v --apply --force --source=.

          retry -t 4  -- post-install-chezmoi

          export LUNARVIM_LOG_LEVEL="debug"
          export LV_BRANCH="release-1.3/neovim-0.9"
          curl -s "https://raw.githubusercontent.com/LunarVim/LunarVim/${LV_BRANCH}/utils/installer/install.sh" | bash -s -- --install-dependencies -y


      - name: macos-15 requires a custom tap for openssl@1.1
        if: matrix.os == 'macos-latest'
        run: |
          brew install openssl@3 readline libyaml gmp autoconf tmux || true
          brew install rbenv/tap/openssl@1.1 || true
          brew info gnu-getopt || true


      # Allow debugging with tmate
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}
        with:
          # Use registered public SSH key(s)
          # If you have registered one or more public SSH keys with your GitHub profile, tmate will be started such that only those keys are authorized to connect, otherwise anybody can connect to the tmate session. If you want to require a public SSH key to be installed with the tmate session, no matter whether the user who started the workflow has registered any in their GitHub profile, you will need to configure the setting limit-access-to-actor to true, like so:
          limit-access-to-actor: true

      - name: macos-15 needs you to explicitly add an argument for openssl 3 on ${{ matrix.os }}
        if: matrix.os == 'macos-latest'
        env:
          ZSH_DOTFILES_PREP_CI: 1
          ZSH_DOTFILES_PREP_DEBUG: 1
          # NOTE: Skip Brew bundle for now, speed up tests
          ZSH_DOTFILES_PREP_GITHUB_USER: bossjones
          ZSH_DOTFILES_PREP_SKIP_BREW_BUNDLE: 1
        run: |
          { echo "$HOME/bin"; echo "$HOME/.bin"; echo "$HOME/.local/bin"; } >> "${GITHUB_PATH}"
          export PATH="${HOME}/.bin:${HOME}/bin:${HOME}/.local/bin:${PATH}"

          export ASDF_DIR="${HOME}/.asdf"
          export ASDF_COMPLETIONS="$ASDF_DIR/completions"
          . "$HOME/.asdf/asdf.sh"

          set -x

          echo "$HOME/.asdf/bin" >> "${GITHUB_PATH}"
          echo "$HOME/.asdf/shims" >> "${GITHUB_PATH}"

          GNUGETOPT_BIN="$(brew --prefix gnu-getopt)/bin"
          echo "$GNUGETOPT_BIN" >> "${GITHUB_PATH}"

          export PATH="${GNUGETOPT_BIN}:${PATH}"

          # Fix SC2155: Declare and assign separately
          OPENSSL3_PREFIX="$(brew --prefix openssl@3)"
          export LDFLAGS="-L${OPENSSL3_PREFIX}/lib"
          export CPPFLAGS="-I${OPENSSL3_PREFIX}/include"

          brew install rust || true
          brew install openssl readline sqlite3 xz zlib tcl-tk pkg-config autogen bash bzip2 libffi cheat python@3.10 || true

          brew install cmake || true

          brew install curl diff-so-fancy direnv fd gnutls findutils fnm fpp fzf gawk gcc gh git gnu-indent gnu-sed gnu-tar grep gzip || true

          brew install hub jq less lesspipe libxml2 lsof luarocks luv moreutils neofetch neovim nnn node tree pyenv pyenv-virtualenv pyenv-virtualenvwrapper || true

          brew install ruby-build rbenv reattach-to-user-namespace ripgrep rsync screen screenfetch shellcheck shfmt unzip urlview vim watch wget zlib zsh openssl@1.1 git-delta || true
          brew install kadwanev/brew/retry || true

          brew install tmux || true
          brew install openssl@3 readline libyaml gmp autoconf || true
          brew install rbenv/tap/openssl@1.1 || true

          brew install openssl@3 readline libyaml gmp autoconf || true

          export ASDF_DIR="${HOME}/.asdf"
          export ASDF_COMPLETIONS="$ASDF_DIR/completions"
          . "$HOME/.asdf/asdf.sh"

          echo "$HOME/.asdf/bin" >> "${GITHUB_PATH}"
          echo "$HOME/.asdf/shims" >> "${GITHUB_PATH}"
          # ruby-build 3.2.1 ~/.asdf/installs/ruby/3.2.1 -- --with-openssl-dir="${OPENSSL3_PREFIX}" || true
          asdf install ruby 3.2.1 -- --with-openssl-dir="${OPENSSL3_PREFIX}" || true

          retry -t 4  -- "$HOME/.bin/chezmoi" init -R --debug -v --apply --force --source=.

          retry -t 4  -- post-install-chezmoi


      - name: pytest on ${{ matrix.os }}
        run: |
          # Removed 'exec zsh' to prevent script termination
          zsh -c '
          { echo "$HOME/bin"; echo "$HOME/.bin"; echo "$HOME/.local/bin"; } >> "${GITHUB_PATH}"
          export PATH="${HOME}/.bin:${HOME}/bin:${HOME}/.local/bin:${PATH}"
          pwd
          ls -lta
          python -m venv venv
          source ./venv/bin/activate
          pip install -U pip setuptools wheel
          pip install -U -r requirements-test.txt
          export ASDF_DIR="${HOME}/.asdf"
          export ASDF_COMPLETIONS="$ASDF_DIR/completions"
          . "$HOME/.asdf/asdf.sh"

          echo "$HOME/.asdf/bin" >> "${GITHUB_PATH}"
          echo "$HOME/.asdf/shims" >> "${GITHUB_PATH}"

          make test
          '
